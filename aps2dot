#!/bin/bash
#
# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2012 Osiris Alejandro Gomez <osiux@osiux.com.ar>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# This scripts make a watermark in image using "CC Icons" font.
# Download cc-icons True-Type font for Creative Commons License
# http://mirrors.creativecommons.org/presskit/cc-icons.ttf
#
# REQUIRED: apt-get install graphviz ttf-inconsolata

CLOSED_COLOR=red
OPEN_COLOR=limegreen
BG_COLOR=black
NODE_SHAPE=plaintext
MAC_ON=false
SSID_ON=true
FONT_NAME=inconsolata
EDGE_STYLE=invis
CC_LICENSE=cba

function usage()
{
cat << EOF

Use:
# $0 [options]
 -m     show MAC Address
 -s     show SSID (default=ON)
 -b     background color (default=black)
 -c     closed color (default=red)
 -o     open color (default=limegreen)
 -f     font name (default=inconsolata)     
 -n     node shape (default=plaintext)
 -y     edge style (default=invis)
 -l     CC License (default=ccbysa)

 -?, --help   this Help

EOF

    exit 1
}

while getopts "mshc:o:b:n:f:y:" OPTION
do
    case $OPTION in
        m)
            MAC_ON=true
            ;;
        s)
            SSID_ON=true
            ;;
        c)
            CLOSED_COLOR=$OPTARG
            ;;
        o)
            OPEN_COLOR=$OPTARG
            ;;
        b)
            BG_COLOR=$OPTARG
            ;;
        n)
            NODE_SHAPE=$OPTARG
            ;;
        f)
            FONT_NAME=$OPTARG
            ;;
        y)
            EDGE_STYLE=$OPTARG
            ;;
        l)
            CC_LICENSE=$OPTARG
            ;;
        h)
            usage
            exit 1
            ;;
    esac
done

TOTAL_CLOSED=0
TOTAL_OPEN=0

echo 'graph APs {'$'\n'
echo '  node [shape='$NODE_SHAPE', fontname='$FONT_NAME', fontsize=10, fontcolor=black];'

echo '  edge [style='$EDGE_STYLE'];'

echo '  OSiUX [label="osiux@buenosaireslibre.org",fontcolor=green,fontsize=28];'

echo '  ccbysa [label="'$CC_LICENSE'",fontname="CC Icons",fontcolor=green,fontsize=26];'
echo '  OSiUX -- ccbysa [len="2.6"];'

egrep --color=auto -o "[a-h0-9:]{17}" aps.txt | sort -u >/tmp/mac.tmp

cat /tmp/mac.tmp | while read MAC
do
	LINE=$(grep $MAC aps.txt)
    MAX_LEVEL=$(echo "$LINE" | awk '{print $NF}' | sort -nr | head -1)
    MIN_LEVEL=$(echo "$LINE" | awk '{print $NF}' | sort -n | head -1)
	CLOSED=$(echo $LINE | egrep -o "(yes|no)" | head -1)
    SSID=$(echo "$LINE" | cut -f1 | head -1)
    #egrep -o "^[a-zA-Z0-9\/\&\@_\ \.\-]+\ ")
    TRIM_MAC=$(echo $MAC | tr -d ":" | cut -c -8)
    NORMA=$(echo $LINE | egrep -o "\(B\+G\)" | head -1)

    LEN=$[100-$MAX_LEVEL]
    SIZE=27;

    if [ $LEN -ge 10 ];then SIZE=26;fi
    if [ $LEN -ge 20 ];then SIZE=24;fi
    if [ $LEN -ge 30 ];then SIZE=22;fi
    if [ $LEN -ge 40 ];then SIZE=20;fi
    if [ $LEN -ge 50 ];then SIZE=18;fi
    if [ $LEN -ge 60 ];then SIZE=16;fi
    if [ $LEN -ge 70 ];then SIZE=14;fi
    if [ $LEN -ge 80 ];then SIZE=12;fi
    if [ $LEN -ge 90 ];then SIZE=10;fi

    if [ $CLOSED = "yes" ]
    then
        COLOR=$CLOSED_COLOR
        TOTAL_CLOSED=$[$TOTAL_CLOSED+1]
    else
        COLOR=$OPEN_COLOR
        TOTAL_OPEN=$[$TOTAL_OPEN+1]
    fi

    BAL=$(echo $SSID | egrep -o buenosaireslibre)
    if [ "$BAL" = "buenosaireslibre" ]
    then
        COLOR=green
    fi

    D=1;

    if [ $LEN -ge 90 ];then D=10;fi
    if [ $LEN -ge 80 ];then D=9;fi
    if [ $LEN -ge 70 ];then D=8;fi
    if [ $LEN -ge 60 ];then D=7;fi
    if [ $LEN -ge 50 ];then D=6;fi
    if [ $LEN -ge 40 ];then D=5;fi
    if [ $LEN -ge 30 ];then D=4;fi
    if [ $LEN -ge 20 ];then D=3;fi
    if [ $LEN -ge 10 ];then D=2;fi

    echo 'OSiUX -- "'$MAC'" [len='$D'.'$LEN'];'

    NODE_NAME=''

    if [ $SSID_ON == "true" ]
    then
        NODE_NAME=$SSID
    fi

    if [ $MAC_ON == "true" ]
    then
        NODE_NAME=$NODE_NAME"\n"$TRIM_MAC
        D=$[$D+1]
        SIZE=$[$SIZE-3]
    fi

    echo '"'$MAC'"' '[label="'$NODE_NAME'",fontcolor='$COLOR',fontsize='$SIZE'];'

    echo $TOTAL_CLOSED >/tmp/closed.tmp
    echo $TOTAL_OPEN >/tmp/open.tmp
done

CLOSED=$(cat /tmp/closed.tmp)
OPEN=$(cat /tmp/open.tmp)
TOTAL=$[$CLOSED+$OPEN]

echo '  graph [bgcolor='$BG_COLOR',fontcolor=white,fontname="'$FONT_NAME'",fontsize=12,label="'$TOTAL' APs, '$CLOSED' closed, '$OPEN' open"]'$'\n'
echo $'\n'
echo '}'
